#!/usr/bin/perl
use strict;
use warnings;
use DBI;
use File::Copy;
use File::Spec;
use Carp;
use Getopt::Long;

my $appdir = "/etc/bind/adblockDNS";
my $blockfile = "${appdir}/blocked_domains.conf";
my $blockdb = "${appdir}/null.zone.file";
 
my $bind_restart = "rndc reload";    # leave blank to skip reloading bind
my $blocklist_URL = "http://pgl.yoyo.org/adservers/serverlist.php?hostformat=nohtml\&showintro=1\&mimetype=plaintext";

# Database connection details
my $database = "<DB>";
my $dbuser   = "<DBUSER>";
my $dbpass   = "<DBPASS>";
my $dbhost   = "localhost";
my $dbport   = 3306;

my $min_success = 500; # minimum amount of records returned for successful run
my $domain;
my $gendate           = scalar( localtime() );
my $blocklist_version = 0;
my $scriptname        = File::Spec->rel2abs(__FILE__);

my $dsn = "DBI:mysql:database=$database;host=$dbhost;port=$dbport";
my $dbh = DBI->connect( $dsn, $dbuser, $dbpass );
my $sth;
unless ($dbh) {
    croak "Database connection failed, aborting\n";
}

# should we fetch an updated blocklist?
my $fetch = 0;
GetOptions ('fetch!' => \$fetch, 'url=s' => \$blocklist_URL);

# check the most recent timestamp in the database.
# If its newer than the bind conf file, generate a new one
my $q_lastupdate = "select max(timestamp) from blocklist";
$sth = $dbh->prepare($q_lastupdate);
$sth->execute();
my $last_update = $sth->fetchrow();

print "Last DB update: $last_update\n";

# check to see if the file needs updating
if ( -f $blockfile ) {
    open my $conf, "<$blockfile" or warn "Error reading $blockfile\n";
    if ($conf) {
        chomp( $blocklist_version = <$conf> );
        $blocklist_version =~ s/^.*: //;
    }
    close $conf;
}
else {
    warn "$blockfile missing\n";
}

# if no update needed, stop here.
if ($blocklist_version) {
    if ( $blocklist_version eq $last_update ) {
        print "$blockfile up to date\n";
        exit(0);
    }
}

open OUT, ">/tmp/blocked_domains.conf.$$";
print OUT "// VERSION: $last_update\n";
print OUT "// bind config generated by $scriptname $gendate\n";

my $query = "select id, domain from blocklist";
$sth = $dbh->prepare($query);
unless ($sth) { die "No sth prepared\n"; }
$sth->execute();

my $rec = 0;
my $id;
while ( ( $id, $domain ) = $sth->fetchrow_array() ) {
    next unless ($domain);
    print OUT
        "zone \"$domain\" { type master; notify no; file \"${blockdb}\"; };\n";
    $rec++;
}

close OUT;
print "$rec domains blocked\n";
if ( $rec > $min_success ) {
    rename( $blockfile, "${blockfile}.bak" );
    move( "/tmp/blocked_domains.conf.$$", $blockfile )
        or croak "Error installing new $blockfile\n";
    if ($bind_restart) {
        print "Reloading BIND\n";
        system($bind_restart) && croak "Error executing $bind_restart\n";
    }
}
